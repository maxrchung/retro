type Query {
  info: String!
  feed: [Link!]!
  # Fetch a single link by its `id`
  link(id: ID!): Link
}

type Mutation {
  post(url: String!, description: String!): Link!
  # Update a link
  updateLink(id: ID!, url: String, description: String): Link
  # Delete a link
  deleteLink(id: ID!): Link
}

type Link {
  id: ID!
  description: String!
  url: String!
}




type Retro {
  id: ID!
  columns: [Column!]!
}

type Column {
  id: ID!
  name: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  content: String!
}


type Query {
  retro(id: ID!): Retro!
}

type Mutation {
  createColumn(retroId: ID!, columnId: ID!, columnName: String!): Retro!
  createPost(retroId: ID!, columnId: ID!, postContent: String!): Retro!

  updateColumnName(retroId: ID!, columnId: ID!, columnName: String!): Retro!
  updatePostContent(retroId: ID!, columnId: ID!, postId: ID!, postContent: String!): Retro!

  removeColumn(retroId: ID!, columnId: ID!): Retro!
  removePost(retroId: ID!, columnId: ID!, postId: ID!): Retro!
}

type Subscription {
}